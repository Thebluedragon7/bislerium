@model CoreBusiness.Blog
@inject Microsoft.AspNetCore.Identity.UserManager<CoreBusiness.User> UserManager

@{
    ViewBag.Title = "Blog Detail";
}

<div class="container">
    <div>
        <div>
            <div class="d-flex justify-content-between align-items-xl-center">
                <h1>@Model.Title</h1>

                @if (User?.Identity != null && User.Identity.IsAuthenticated && UserManager.GetUserId(User) == Model.AuthorId)
                {
                    <div>
                        <a class="btn btn-primary" role="button">
                            <i class="far fa-edit"></i>
                        </a>
                        <a class="btn btn-primary ms-3" role="button">
                            <i class="far fa-trash-alt"></i>
                        </a>
                    </div>
                }

            </div>
            <div class="d-flex justify-content-between align-items-xl-center">
                <h5 class="text-muted">@Model.Subtitle</h5><em>by @Model.Author.FullName</em>
            </div>
        </div>
        <p style="text-align: justify;">@Model.Body</p>

        @if (Model.BlogImages != null && Model.BlogImages.Count > 0)
        {
            <div class="row gy-4 row-cols-1 row-cols-md-2">
                @foreach (var image in Model.BlogImages)
                {
                    <div class="col">
                        <div class="d-flex flex-column flex-lg-row">
                            <div class="w-100">
                                <img class="rounded img-fluid d-block w-100 fit-cover" style="height: 200px;" src="@image.ImageUrl" alt="img"/>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

        <hr/>
        <div class="d-xl-flex align-items-xl-center">
            <a class="btn btn-primary" role="button">
                @* Blog Reaction count with reaction type Activity = Upvote; if null then 0 *@
                <i class="far fa-thumbs-up"></i> @(Model.BlogReactions?.Count(r => r.ReactionType.Activity == "Upvote") ?? 0)
            </a>
            <a class="btn btn-primary ms-3" role="button">
                @* Blog Reaction count with reaction type Activity = Downvote; if null then 0 *@
                <i class="far fa-thumbs-down"></i> @(Model.BlogReactions?.Count(r => r.ReactionType.Activity == "Downvote") ?? 0)
            </a>
            <a class="btn btn-primary ms-3" role="button">
                @* Blog Comment count; if null then 0 *@
                <i class="far fa-comment"></i> @(Model.Comments?.Count ?? 0)
            </a>
        </div>
    </div>
    <hr/>

    @if (Model.Comments != null && Model.Comments.Count > 0)
    {
        <div class="mt-4">
            <ul class="list-group">
                @foreach (var comment in Model.Comments)
                {
                    <li class="list-group-item">
                        <div class="d-flex justify-content-between">
                            <div>
                                <span>@comment.Text</span><em> - Comment Author</em>
                            </div>
                            <div class="d-xl-flex align-items-xl-center">
                                <a class="btn btn-primary" role="button"><i class="far fa-thumbs-up"></i> 0</a><a class="btn btn-primary ms-3" role="button"><i class="far fa-thumbs-down"></i> 0</a>
                            </div>
                        </div>
                    </li>
                }

            </ul>
        </div>
    }
</div>